@model StreamOneInterface.ViewModels.ReceivedOrdersViewModel
@using PagedList;
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Orders";
}
<div class="well col-sm-10">
    <h3>List of received orders</h3>

    <p>
        @Html.ActionLink("Add new order", "Create", null, new { @class = "btn btn-default" })
    </p>
    <fieldset class="form-group">
        @using (Html.BeginForm("Index", "ReceivedOrders", FormMethod.Get))
        {
            <label>Find by StreamOne ID, Reseller's Company or Order status:</label>
                @Html.TextBox("SearchString", null, new { @class = "form-control" })
                <input type="submit" class="form-control" value="Search" />
        }
    </fieldset>

    <table class="table table-striped table-hover table-condensed">
        <thead class="tableheader">
            <tr>
                <th>
                    @Html.ActionLink("Status", "Index", new { sortOrder = ViewBag.StatusSortParm , currentFilter = ViewBag.CurrentFilter })
                    
                </th>
                <th>
                    @Html.ActionLink("StreamOne ID", "Index", new { sortOrder = ViewBag.StreamOneSortParm, currentFilter = ViewBag.CurrentFilter })
                  
                </th>
                <th>
                    @Html.ActionLink("Reseller", "Index", new { sortOrder = ViewBag.CompanySortParm, currentFilter = ViewBag.CurrentFilter })
                </th>
                <th>
                    @Html.ActionLink("First Name", "Index", new { sortOrder = ViewBag.DateSortParm , currentFilter = ViewBag.CurrentFilter })
                </th>
                <th></th>
            </tr>
            </thead>
        <tbody>
            @foreach (var item in Model.Orders)
            {

                string selectedRow = "";
                if (item.Id == ViewBag.Id)
                {
                    selectedRow = "success";
                }
                <tr class="@selectedRow">
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderStatus.Status)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderStreamOneID)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Reseller.Company)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Date)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-default btn-sm" })
                        @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-default btn-sm" })
                        @* It is not allowed to delete a order
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-danger btn-sm" })*@
                        @Html.ActionLink("Select", "Index", new { id = item.Id }, new { @class = "btn btn-success btn-sm" })
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <br />
    <div>
        <br />
        @*Page @(Model.Orders.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount*@

        @Html.PagedListPager((IPagedList)ViewBag.OnePageofOrders, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
    </div>
</div>
<div class="well col-sm-9" id="orderRows">
    @* Order Rows starts here  *@

    @if (Model.OrderRows != null)
    {
        <h3>Order rows of selected order</h3>
        <table class="table table-striped table-hover table-condensed">
            <thead class="tableheader">
                <tr>
                    <th>Item ID</th>
                    <th>Status</th>
                    <th>Product</th>
                    <th>Quantity</th>
                    <th>Price</th>
                    <th></th>
                </tr>
           </thead>
            <tbody>
                @foreach (var item in Model.OrderRows)
                {
                    <tr>
                        <td>
                            @item.ItemID
                        </td>
                        <td>
                            @item.OrderRowStatus.RowStatus
                        </td>
                        <td>
                            @item.Product.Name
                        </td>
                        <td>
                            @item.Quantity
                        </td>
                        <td>
                            @item.UnitPrice
                        </td>
                        <td>
                            @Html.ActionLink("Product details", "Details", "Products", new { id = item.ProductID }, new { @class = "btn btn-default btn-sm" })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>
